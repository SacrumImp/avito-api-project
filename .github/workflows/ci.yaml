name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: FjHJr7142UPU
          POSTGRES_DB: avitodb

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: sudo apt-get install docker-compose

    - name: Build Docker images
      run: docker-compose build

    - name: Run tests and generate coverage report
      run: |
        docker-compose up -d db  # Start database
        docker-compose run --name api_test_run api sh -c "go test -coverprofile=coverage.out ./..."
        docker cp api_test_run:/app/coverage.out ./coverage.out
        docker-compose down

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}